swagger: "2.0"
info:
  description: "API Documentation for Teamlock"
  version: "1.0.0"
  title: "Teamlock API Documentation"
  contact:
    email: "olivier@deregis.fr"
host: "demo.teamlock.io"
basePath: "/api/"
tags:
- name: "Authentication"
- name: "Workspace"
  description: "Teamlock Workspaces"
schemes:
- "https"
paths:
  /auth:
    post:
      tags:
      - "Authentication"
      summary: "Authenticate"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Authentication information"
        required: true
        schema:
          $ref: "#/definitions/auth"
      responses:
        "200":
          description: "Authentication Succeed"
          schema: {
            "$ref": "#/definitions/auth_succeed"
          }
        "401":
          description: "Authentication Failed"
          schema: {
            "$ref": "#/definitions/auth_failed"
          }
  /workspace:
    get:
      tags:
        - "Workspace"
      summary: "List all available workspaces"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
       - in: "header"
         name: Authorization
         type: "string"
       - in: "header"
         name: Passphrase
         type: "string"
      responses:
        "200":
          description: "List of all available workspaces"
          schema: {
            "$ref": "#/definitions/workspaces_list"
          }
  /workspace/tree:
    get:
      tags:
        - "Workspace"
      summary: "Get Tree of a Workspace"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
       - in: "header"
         name: Authorization
         type: "string"
       - in: "header"
         name: Passphrase
         type: "string"
       - in: "query"
         name: workspace_id
         type: "string"
         format: "uuid"
      responses:
        "200":
          description: "Tree of selected workspace"
          schema: {
            "$ref": "#/definitions/workspace_tree"
          }
        "400":
          description: "Bad request"
          schema: {
            "$ref": "#/definitions/bad_request"
          }
        "500":
          description: "Error"
          schema: {
            "$ref": "#/definitions/error"
          }
  /workspace/keys:
    get:
      tags:
        - "Workspace"
      summary: "Get Keys of a Folder"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
       - in: "header"
         name: Authorization
         type: "string"
       - in: "header"
         name: Passphrase
         type: "string"
       - in: "query"
         name: workspace_id
         type: "string"
         format: "uuid"
       - in: "query"
         name: folder_id
         type: "string"
         format: "uuid"
      responses:
        "200":
          description: "Keys of a selected folder"
          schema: {
            "$ref": "#/definitions/folder_keys"
          }
        "400":
          description: "Bad request"
          schema: {
            "$ref": "#/definitions/bad_request"
          }
        "500":
          description: "Error"
          schema: {
            "$ref": "#/definitions/error"
          }
  /workspace/folder/add:
    post:
      tags:
        - "Workspace"
      summary: "Add a folder to the workspace"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          type: "string"
        - in: "header"
          name: Passphrase
          type: "string"
        - in: "body"
          name: "body"
          description: "Authentication information"
          required: true
          schema:
            $ref: "#/definitions/folder"
      responses:
        "201":
          description: "Folder successfully created"
          schema: {
            "$ref": "#/definitions/success_create_folder"
          }
        "400":
          description: "Bad request"
          schema: {
            "$ref": "#/definitions/bad_request"
          }
        "500":
          description: "Error when creating a folder"
          schema: {
            "$ref": "#/definitions/error"
          }
  /workspace/keys/add:
    post:
      tags:
        - "Workspace"
      summary: "Add a key to a folder"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
       - in: "header"
         name: Authorization
         type: "string"
       - in: "header"
         name: Passphrase
         type: "string"
       - in: "body"
         name: "body"
         description: "Authentication information"
         required: true
         schema:
           $ref: "#/definitions/key"
      responses:
        "201":
          description: "Key successfully created"
          schema: {
            "$ref": "#/definitions/success_create_key"
          }
        "400":
          description: "Bad request"
          schema: {
            "$ref": "#/definitions/bad_request"
          }
        "500":
          description: "Error when creating a key"
          schema: {
            "$ref": "#/definitions/error"
          }
         
definitions:
  auth:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  auth_succeed:
    type: "object"
    properties:
      status:
        type: "boolean"
      token:
        type: "string"
      passphrase:
        type: "string"
      expireAt:
        type: "string"
        format: "date-time"
  auth_failed:
    type: "object"
    properties:
      status:
        type: 'boolean'
        example: false
      error:
        type: 'string'
  workspaces_list:
    type: "object"
    properties:
      status:
        type: "boolean"
      workspaces:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
            name:
              type: "string"
  workspace_tree:
    type: "object"
    properties:
      status:
        type: "boolean"
      rights:
        type: "string"
        example: "Read & Write"
      tree:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
              format: "uuid"
            text:
              type: "string"
            icon:
              type: "string"
            parent:
              type: "string"
  
  folder_keys:
    type: "object"
    properties:
      status:
        type: "boolean"
      keys:
        type: "array"
        items:
          type: "object"
          properties:
            id: 
              type: "string"
              format: "uuid"
            name:
              type: "string"
            login:
              type: "string"
            password:
              type: "string"
            uri:
              type: "string"
            ipv4:
              type: "string"
            ipv6:
              type: "string"
            informations:
              type: "string"
            folder:
              type: "string"
              format: "uuid"
  folder:
    type: "object"
    required:
     - "workspace_id"
     - "text"
     - "parent"
    properties:
      workspace_id:
        type: "string"
        format: "uuid"
      parent:
        type: "string"
        description: "Parent folder (UUID or # for Root)"
      text:
        type: "string"
  success_create_folder:
    type: "object"
    properties:
      status: 
        type: "boolean"
  key:
    type: "object"
    required:
    - "workspace_id"
    - "folder_id"
    - "name"
    - "login"
    - "password"
    properties:
      workspace_id:
        type: "string"
        format: "uuid"
      folder_id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      login:
        type: "string"
      password:
        type: "string"
      uri:
        type: "string"
      ipv4:
        type: "string"
      ipv6:
        type: "string"
      informations:
        type: "string"
  success_create_key:
    type: "object"
    properties:
      status: 
        type: "boolean"
  error:
    type: "object"
    properties:
      status:
        type: "boolean"
        example: false
      error:
        type: "string"
  bad_request:
    type: "object"
    properties:
      status: 
        type: "boolean"
        example: false
      error: 
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"